@using AuctionPortal.Services
@using AuctionPortal.Data.Models

@inject IAuctionService AuctionService
@inject NavigationManager NavigationManager

@page "/auctions"

<MudContainer MaxWidth="MaxWidth.ExtraLarge" Class="py-6">
    <MudGrid>
        @if(_auctions == null)
        {
            <MudText>No Auctions have been Added yet...</MudText>
        }
        else
        {
            @foreach (Auction auction in _auctions)
            {
                <MudItem Class="mx-5 pa-2 d-flex flex-column" xs="12" sm="6" md="4" lg="3" xl="2">
                        <!-- Image -->
                        <MudImage Src="https://placehold.co/600x400"
                                  Height="200"
                                  ObjectFit="ObjectFit.Cover"
                                  Class="rounded" />

                        <!-- Auction Info -->
                        <MudStack Spacing="1" Class="mt-2" Style="flex:1;">
                            <MudText Typo="Typo.h6" Class="fw-bold text-primary">
                                @auction.Name
                            </MudText>

                            <MudText Typo="Typo.body2" Class="text-truncate">
                                @if(auction.Description == null)
                                {
                                    <em> No Description </em>
                                }
                                @auction.Description
                            </MudText>
                        </MudStack>

                        <!-- Actions -->
                        <MudStack Row="true" AlignItems="AlignItems.Center" Justify="Justify.SpaceBetween" Class="mt-2">
                            <MudText Color="Color.Info" Typo="Typo.subtitle2">
                                <strong>Ends</strong> - @auction.EndTime.ToString("ddd dd MMM")
                            </MudText>

                            <MudIconButton OnClick="@(() => ViewAuction(auction.Id))" Icon="@Icons.Material.Outlined.Visibility" Edge="Edge.End" />
                        </MudStack>
                </MudItem>

            }
        }
    </MudGrid>
</MudContainer>
<style>
    .text-truncate {
        display: -webkit-box;
        -webkit-line-clamp: 2; /* show 2 lines before truncating */
        -webkit-box-orient: vertical;
        overflow: hidden;
        text-overflow: ellipsis;
        width: 100%;
        line-height: 1.2rem;
        max-height: calc(1.2rem * 2);
        white-space: normal;
    }
</style>
@code {
    IEnumerable<Auction>? _auctions; 

    protected override async Task OnInitializedAsync()
    {
        _auctions = await AuctionService.GetAuctionsAsync();

        if (!_auctions.Any())
        {
            //throw error
        }

        if (_auctions.Count() == 1)
        {
            Guid id = _auctions.First().Id;
            NavigationManager.NavigateTo($"/auctions/{id}");
        }
    }

    private void ViewAuction(Guid auctionId)
    {
        NavigationManager.NavigateTo($"/auctions/{auctionId}");
    }
}
