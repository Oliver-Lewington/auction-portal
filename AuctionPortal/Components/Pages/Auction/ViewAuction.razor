@page "/{Id:guid}"

@using AuctionPortal.Services
@using AuctionPortal.Data.Models
@using AuctionPortal.Components.Pages.Auction.Components
@using AuctionPortal.Components.Pages.Product
@using AuctionPortal.ViewModels
@using AutoMapper
@using MudBlazor

@inject ISnackbar Snackbar
@inject IAuctionService AuctionService
@inject NavigationManager NavigationManager
@inject IDialogService DialogService
@inject IMapper Mapper

<MudGrid Spacing="6">

    <!-- Left: Auction Image -->
    <MudItem sm="12" lg="6" Class="d-flex justify-end align-center">
        <MudImage Src="@_placeholderImage"
                  Fluid="true"
                  ObjectFit="ObjectFit.Cover"
                  Width="375"
                  Alt="Auction Image"
                  Elevation="25"
                  Class="rounded-lg my-4" />
    </MudItem>

    <!-- Right: Auction Details -->
    <MudItem sm="12" lg="6" Class="d-flex justify-start align-center">
        <MudStack Spacing="5">
            <!-- Title & Description -->
            <MudStack Spacing="0">
                <MudText Color="Color.Primary" Typo="Typo.caption">
                    <b>@auctionViewModel.EndsAt.ToString("ddd dd MMM") - @auctionViewModel.EndsAt.ToString("ddd dd MMM")</b>
                </MudText>
                <MudText Typo="Typo.h4">@auctionViewModel?.Name</MudText>
                <MudText Typo="Typo.body2" Class="text-secondary">
                    @(auctionViewModel?.Description ?? "A description has not been created for this auction yet.")
                </MudText>
            </MudStack>

            <!-- Action Buttons -->
            <MudGrid>
                <MudItem>
                    <MudButton Disabled="@(!auctionViewModel.LiveFlag)"
                               Size="Size.Small"
                               Color="Color.Primary"
                               Variant="Variant.Filled">
                        View Live Auction
                    </MudButton>
                </MudItem>
                <MudItem>
                    <MudButton Size="Size.Small" Variant="Variant.Outlined">
                        View Products
                    </MudButton>
                </MudItem>
            </MudGrid>
        </MudStack>
    </MudItem>

    <!-- Tabs -->
    <MudItem xs="12">
        <MudTabs ApplyEffectsToContainer="false"
                 Border="true"
                 Color="Color.Transparent"
                 PanelClass="pa-6">

            <!-- Products Tab -->
            <MudTabPanel Disabled="@(!auctionViewModel.Products.Any())"
                         Text="Products"
                         BadgeData="@auctionViewModel?.Products.Count"
                         BadgeColor="Color.Primary">
                <ViewAuctionProducts ProductRecords="auctionViewModel?.Products" />
            </MudTabPanel>

            <!-- Bidders Tab -->
            <MudTabPanel Text="Bidders">
                <MudText>Content One</MudText>
            </MudTabPanel>

            <!-- Analytics Tab -->
            <MudTabPanel Disabled="true" Text="Analytics">
                <MudText>Content Three</MudText>
            </MudTabPanel>

            <!-- Settings Tab -->
            <MudTabPanel Text="Settings">
                <AuctionSettings Auction="auctionViewModel" />
            </MudTabPanel>
        </MudTabs>
    </MudItem>
</MudGrid>

@code {
    [Parameter] public Guid Id { get; set; }

    private AuctionViewModel auctionViewModel = new();
    private readonly string _placeholderImage = "https://placehold.co/600x400";

    protected override async Task OnInitializedAsync()
    {
        try
        {
            auctionViewModel = await AuctionService.GetAuctionByIdAsync(Id);
        }
        catch (Exception ex)
        {
            Snackbar.Add($"Failed to load auction: {ex.Message}", Severity.Error);
        }
    }

    private void ViewProduct(Guid productId) => NavigationManager.NavigateTo($"/{Id}/products/{productId}");
}
