@using MudBlazor

<!-- Starting Price -->
<MudTextField T="decimal"
              Label="Starting Price"
              Value="StartingPrice"
              ValueChanged="EventCallback.Factory.Create<decimal>(this, OnStartingPriceChanged)"
              Variant="Variant.Outlined"
              Adornment="Adornment.Start"
              AdornmentIcon="@Icons.Material.Filled.CurrencyPound"
              AdornmentColor="Color.Info"/>

<!-- Optional Reserve Price -->
<MudTextField T="decimal?"
              Label="Reserve Price (optional)"
              Value="ReservePrice"
              ValueChanged="EventCallback.Factory.Create<decimal?>(this, OnReservePriceChanged)"
              Variant="Variant.Outlined"
              Adornment="Adornment.Start"
              AdornmentIcon="@Icons.Material.Filled.CurrencyPound"
              AdornmentColor="Color.Info"/>

<!-- Optional Auction Expiry Date -->
<MudDatePicker T="DateTime?"
               DateFormat="dd/MM/yyyy"
               Label="Auction Expiry Date (optional)"
               Date="ExpiryDate"
               DateChanged="EventCallback.Factory.Create<DateTime?>(this, OnExpiryDateChanged)"
               Clearable="true"
               Variant="Variant.Outlined"/>

@code {
    [Parameter] public decimal StartingPrice { get; set; }
    [Parameter] public EventCallback<decimal> StartingPriceChanged { get; set; }

    [Parameter] public decimal? ReservePrice { get; set; }
    [Parameter] public EventCallback<decimal?> ReservePriceChanged { get; set; }

    [Parameter] public DateTime? ExpiryDate { get; set; }
    [Parameter] public EventCallback<DateTime?> ExpiryDateChanged { get; set; }

    private async Task OnStartingPriceChanged(decimal value)
    {
        StartingPrice = value;
        await StartingPriceChanged.InvokeAsync(value);
    }

    private async Task OnReservePriceChanged(decimal? value)
    {
        ReservePrice = value;
        await ReservePriceChanged.InvokeAsync(value);
    }

    private async Task OnExpiryDateChanged(DateTime? value)
    {
        ExpiryDate = value;
        await ExpiryDateChanged.InvokeAsync(value);
    }
}
