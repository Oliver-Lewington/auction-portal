@page "/test"

@using Microsoft.AspNetCore.Components.Forms
@using MudBlazor
@using AuctionPortal.Components.ImageCarousel

<PageTitle>Test</PageTitle>

<MudGrid>
    <MudItem xs="12" md="6">
        @if (_imageUrls.Any())
        {
            <ImageCarousel Items="_imageUrls.Select(img => new CarouselImage { Id = Guid.NewGuid(), Url = img })" />
        }
    </MudItem>
    <MudItem xs="12" md="6">
        <MudFileUpload T="IReadOnlyList<IBrowserFile>" Accept=".png, .jpg" FilesChanged="UploadFiles" MaximumFileCount="100">
            <ActivatorContent>
                <MudButton Variant="Variant.Filled"
                           Color="Color.Primary"
                           StartIcon="@Icons.Material.Filled.CloudUpload">
                    Upload Files
                </MudButton>
            </ActivatorContent>
        </MudFileUpload>

        @if (_files.Any())
        {
            <MudText Typo="Typo.h6" Class="mt-2">
                @_files.Count File@(_files.Count == 1 ? "" : "s") selected:
            </MudText>

            <MudList T="string">
                @foreach (var file in _files)
                {
                    <MudListItem Icon="@Icons.Material.Filled.AttachFile" @key="file.Name">
                        @file.Name <code>@file.Size bytes</code>
                    </MudListItem>
                }
            </MudList>
        }
    </MudItem>
</MudGrid>

@code {
    private readonly ICollection<IBrowserFile> _files = new List<IBrowserFile>();
    private readonly List<string> _imageUrls = new();

    private async Task UploadFiles(IReadOnlyList<IBrowserFile> files)
    {
        foreach (var file in files)
        {
            _files.Add(file);

            if (!file.ContentType.StartsWith("image/"))
                return;

            try
            {
                
                    using var stream = file.OpenReadStream(maxAllowedSize: 10_000_000); // 10MB limit
                    using var ms = new MemoryStream();
                    await stream.CopyToAsync(ms);
                    var base64 = Convert.ToBase64String(ms.ToArray());
                    var imageUrl = $"data:{file.ContentType};base64,{base64}";
                    _imageUrls.Add(imageUrl);
                
            }
            catch(Exception ex)
            {
                
            }
        }

        StateHasChanged();
    }

}
